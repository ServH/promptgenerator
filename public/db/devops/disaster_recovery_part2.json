{
  "instructions": [
    {
      "id": "dr006",
      "title": {
        "es": "Automatizar procedimientos de failover",
        "en": "Automate failover procedures"
      },
      "description": {
        "es": "Implementar mecanismos automatizados para detectar fallos y cambiar a sistemas de respaldo",
        "en": "Implement automated mechanisms to detect failures and switch to backup systems"
      },
      "text": {
        "es": "Automatiza los procedimientos de failover para minimizar la intervención manual y reducir el tiempo de recuperación. Implementa sistemas de monitoreo que detecten fallos en componentes críticos y activen automáticamente los procedimientos de conmutación por error según reglas predefinidas, manteniendo un registro detallado de todas las acciones ejecutadas.",
        "en": "Automate failover procedures to minimize manual intervention and reduce recovery time. Implement monitoring systems that detect failures in critical components and automatically trigger failover procedures according to predefined rules, while maintaining a detailed log of all actions executed."
      },
      "importance": "high",
      "category": "disaster_recovery",
      "subcategory": "automation",
      "tags": ["automation", "monitoring", "resilience"],
      "source": {
        "agentType": "general",
        "repository": "system-prompts/devops",
        "context": "Automated Failover Patterns"
      },
      "compatibility": {
        "frameworks": ["all"],
        "languages": ["all"],
        "environments": ["cloud", "hybrid", "on-premise"]
      },
      "examples": [
        {
          "context": {
            "es": "Configuración de Route 53 para failover automatizado",
            "en": "Route 53 configuration for automated failover"
          },
          "code": "# Ejemplo de configuración de failover con AWS Route 53 usando Terraform\n\n# Política de comprobación de estado para el entorno primario\nresource \"aws_route53_health_check\" \"primary\" {\n  fqdn              = \"api.example.com\"\n  port              = 443\n  type              = \"HTTPS\"\n  resource_path     = \"/health\"\n  failure_threshold = 3\n  request_interval  = 30\n\n  tags = {\n    Name = \"primary-health-check\"\n  }\n}\n\n# Registro DNS primario\nresource \"aws_route53_record\" \"primary\" {\n  zone_id = aws_route53_zone.main.zone_id\n  name    = \"api.example.com\"\n  type    = \"A\"\n  set_identifier = \"primary\"\n  failover_routing_policy {\n    type = \"PRIMARY\"\n  }\n  health_check_id = aws_route53_health_check.primary.id\n  alias {\n    name                   = aws_lb.primary.dns_name\n    zone_id                = aws_lb.primary.zone_id\n    evaluate_target_health = true\n  }\n}\n\n# Registro DNS secundario\nresource \"aws_route53_record\" \"secondary\" {\n  zone_id = aws_route53_zone.main.zone_id\n  name    = \"api.example.com\"\n  type    = \"A\"\n  set_identifier = \"secondary\"\n  failover_routing_policy {\n    type = \"SECONDARY\"\n  }\n  alias {\n    name                   = aws_lb.secondary.dns_name\n    zone_id                = aws_lb.secondary.zone_id\n    evaluate_target_health = true\n  }\n}\n\n# Para bases de datos, AWS RDS Multi-AZ con promoción automática:\nresource \"aws_db_instance\" \"main\" {\n  # ... otras configuraciones\n  multi_az = true\n  availability_zone = \"us-east-1a\"\n  backup_retention_period = 7\n  deletion_protection = true\n  auto_minor_version_upgrade = true\n}"
        }
      ],
      "relatedInstructions": ["dr005", "dr007", "mon001"]
    },
    {
      "id": "dr007",
      "title": {
        "es": "Implementar pruebas regulares de recuperación",
        "en": "Implement regular recovery testing"
      },
      "description": {
        "es": "Realizar pruebas periódicas de los procedimientos de recuperación ante desastres",
        "en": "Conduct periodic tests of disaster recovery procedures"
      },
      "text": {
        "es": "Realiza pruebas programadas y completas de los procedimientos de recuperación ante desastres para validar su efectividad. Incluye pruebas de componentes individuales, pruebas de recuperación completa y simulacros de día del desastre. Documenta los resultados, identifica brechas y actualiza el plan de DR en consecuencia.",
        "en": "Conduct scheduled and comprehensive tests of disaster recovery procedures to validate their effectiveness. Include tests of individual components, complete recovery tests, and disaster day simulations. Document the results, identify gaps, and update the DR plan accordingly."
      },
      "importance": "high",
      "category": "disaster_recovery",
      "subcategory": "testing",
      "tags": ["testing", "validation", "governance"],
      "source": {
        "agentType": "general",
        "repository": "system-prompts/devops",
        "context": "Disaster Recovery Testing"
      },
      "compatibility": {
        "frameworks": ["all"],
        "languages": ["all"],
        "environments": ["all"]
      },
      "examples": [
        {
          "context": {
            "es": "Plan de pruebas de recuperación ante desastres",
            "en": "Disaster recovery testing plan"
          },
          "code": "# Plan Anual de Pruebas de Recuperación ante Desastres\n\n## 1. Tipos de Pruebas\n\n### A. Pruebas de Componentes (Trimestral)\n- **Objetivo**: Verificar la recuperación de componentes individuales\n- **Componentes**:\n  - Restauración de base de datos desde backups\n  - Conmutación de bases de datos replicadas\n  - Conmutación de balanceadores de carga\n  - Verificación de réplicas de almacenamiento\n\n### B. Prueba de Recuperación Funcional (Semestral)\n- **Objetivo**: Validar la recuperación y funcionamiento del sistema completo\n- **Procedimiento**:\n  1. Simulación de fallo en entorno de producción no crítico\n  2. Activación de procedimientos de DR\n  3. Verificación de funcionalidad de aplicaciones\n  4. Validación de integridad de datos\n\n### C. Simulacro de Desastre (Anual)\n- **Objetivo**: Probar plan completo incluyendo comunicaciones y equipo humano\n- **Procedimiento**:\n  1. Actividad sin aviso previo al equipo técnico\n  2. Simulación de pérdida completa de región primaria\n  3. Movilización de equipo de respuesta\n  4. Ejecución de plan de comunicación\n  5. Recuperación completa en región secundaria\n\n## 2. Métricas y Evaluación\n- Tiempo real de recuperación vs. RTO objetivo\n- Pérdida real de datos vs. RPO objetivo\n- Problemas encontrados durante la recuperación\n- Eficacia de la documentación\n- Desviaciones del plan establecido\n\n## 3. Informe Post-Prueba\n- Resultados detallados\n- Áreas de mejora identificadas\n- Plan de acción para resolver deficiencias\n- Actualización del plan de DR según sea necesario"
        }
      ],
      "relatedInstructions": ["dr001", "dr006", "infra009"]
    },
    {
      "id": "dr008",
      "title": {
        "es": "Establecer procedimientos de comunicación en crisis",
        "en": "Establish crisis communication procedures"
      },
      "description": {
        "es": "Definir protocolos claros de comunicación durante incidentes de DR",
        "en": "Define clear communication protocols during DR incidents"
      },
      "text": {
        "es": "Establece procedimientos claros de comunicación para incidentes de recuperación ante desastres. Define canales de comunicación alternativos, listas de contactos actualizadas, plantillas de mensajes predefinidas, y protocolos de escalamiento. Asegúrate de incluir comunicaciones internas, con clientes, proveedores y, si es necesario, con autoridades reguladoras.",
        "en": "Establish clear communication procedures for disaster recovery incidents. Define alternative communication channels, updated contact lists, predefined message templates, and escalation protocols. Be sure to include internal communications, and communications with customers, suppliers, and, if necessary, regulatory authorities."
      },
      "importance": "medium",
      "category": "disaster_recovery",
      "subcategory": "communication",
      "tags": ["governance", "communication", "stakeholders"],
      "source": {
        "agentType": "general",
        "repository": "system-prompts/devops",
        "context": "Crisis Management"
      },
      "compatibility": {
        "frameworks": ["all"],
        "languages": ["all"],
        "environments": ["all"]
      },
      "examples": [
        {
          "context": {
            "es": "Plan de comunicación ante incidentes",
            "en": "Incident communication plan"
          },
          "code": "# Plan de Comunicación para Incidentes de DR\n\n## 1. Canales Alternativos de Comunicación\n- Chat empresarial (Principal): Microsoft Teams\n- Canal de Respaldo: Slack\n- Canal de Emergencia: Grupo de WhatsApp dedicado para el equipo de DR\n- Telefonía: Sistema PBX con números de teléfono alternativos\n\n## 2. Plantillas de Comunicación por Escenario\n\n### Para Comunicación Interna (Personal Técnico)\n```\nASUNTO: [ALERTA NIVEL {1-3}] - Incidente de DR en progreso\n\nSe ha identificado un incidente que requiere activación del Plan de DR:\n- Descripción: {descripción breve}\n- Sistemas afectados: {sistemas}\n- Equipo inicial de respuesta: {nombres}\n- Punto de contacto: {nombre} - {contacto}\n- Canal de comunicación activo: {canal}\n- Próxima actualización: {hora estimada}\n```\n\n### Para Clientes\n```\nASUNTO: Interrupción de servicio - Actualización de estado\n\nEstimado cliente,\n\nNos encontramos experimentando una interrupción en {servicios afectados}. \nNuestro equipo está trabajando activamente para resolver la situación.\n\nEstado actual: {estado}\nImpacto estimado: {impacto}\nTiempo estimado de resolución: {tiempo}\n\nPuede seguir actualizaciones en: {página de estado}\nPara asistencia urgente, contacte: {contacto servicio}\n\nLamentamos los inconvenientes ocasionados.\n\nEquipo de {Empresa}\n```\n\n## 3. Árbol de Escalamiento\n1. Equipo de Primera Respuesta\n   - Si no se resuelve en 30 minutos →\n2. Gerente de Operaciones + Equipo Técnico Especializado\n   - Si no se resuelve en 60 minutos →\n3. Director de Tecnología + Equipo Directivo\n   - Aprobación para comunicaciones externas\n\n## 4. Lista de Contactos\n[Tabla con nombres, roles, emails primario/secundario, teléfonos primario/secundario]"
        }
      ],
      "relatedInstructions": ["dr001", "dr009", "gov003"]
    },
    {
      "id": "dr009",
      "title": {
        "es": "Implementar monitoreo de salud y alertas anticipadas",
        "en": "Implement health monitoring and early warnings"
      },
      "description": {
        "es": "Establecer sistemas de monitoreo para detectar señales tempranas de posibles fallos",
        "en": "Set up monitoring systems to detect early signs of potential failures"
      },
      "text": {
        "es": "Implementa sistemas robustos de monitoreo que puedan detectar señales tempranas de degradación o fallos inminentes antes de que causen interrupciones completas. Configura alertas anticipadas basadas en umbrales que indiquen comportamientos anómalos y permitan intervenciones preventivas para evitar la necesidad de procedimientos completos de recuperación ante desastres.",
        "en": "Implement robust monitoring systems that can detect early signs of degradation or imminent failures before they cause complete disruptions. Set up early warning alerts based on thresholds that indicate anomalous behaviors and allow preventive interventions to avoid the need for full disaster recovery procedures."
      },
      "importance": "medium",
      "category": "disaster_recovery",
      "subcategory": "monitoring",
      "tags": ["monitoring", "proactive", "prevention"],
      "source": {
        "agentType": "general",
        "repository": "system-prompts/devops",
        "context": "Monitoring Best Practices"
      },
      "compatibility": {
        "frameworks": ["prometheus", "cloudwatch", "datadog", "nagios"],
        "languages": ["all"],
        "environments": ["all"]
      },
      "examples": [
        {
          "context": {
            "es": "Configuración de alertas preventivas en Prometheus",
            "en": "Setting up preventive alerts in Prometheus"
          },
          "code": "# Ejemplo de reglas de alerta en Prometheus para detección temprana\n\ngroups:\n- name: disaster_recovery_early_warnings\n  rules:\n  # Alerta de tendencia de almacenamiento\n  - alert: DiskSpaceTrendingToFull\n    expr: predict_linear(node_filesystem_free_bytes[6h], 24 * 3600) < 0\n    for: 30m\n    labels:\n      severity: warning\n    annotations:\n      summary: \"Tendencia crítica de espacio en disco\"\n      description: \"El disco {{ $labels.device }} en {{ $labels.instance }} se quedará sin espacio en menos de 24 horas según la tendencia actual.\"\n\n  # Alerta de contención de conexiones de base de datos\n  - alert: DBConnectionsApproachingLimit\n    expr: sum(mysql_global_status_threads_connected) / sum(mysql_global_variables_max_connections) * 100 > 80\n    for: 15m\n    labels:\n      severity: warning\n    annotations:\n      summary: \"Conexiones de MySQL acercándose al límite\"\n      description: \"Las conexiones de base de datos están al {{ $value }}% del límite máximo durante más de 15 minutos.\"\n\n  # Alerta de latencia creciente\n  - alert: APIResponseTimeIncreasing\n    expr: rate(http_request_duration_seconds_sum[5m]) / rate(http_request_duration_seconds_count[5m]) > 0.5 and rate(http_request_duration_seconds_sum[1h]) / rate(http_request_duration_seconds_count[1h]) < 0.2\n    for: 10m\n    labels:\n      severity: warning\n    annotations:\n      summary: \"Aumento significativo en tiempo de respuesta de API\"\n      description: \"El tiempo de respuesta de API ha aumentado más del doble en comparación con la media de la última hora.\"\n  \n  # Alerta de tasa de errores creciente\n  - alert: ErrorRateIncreasing\n    expr: sum(rate(http_requests_total{status=~\"5..\"}[5m])) / sum(rate(http_requests_total[5m])) > 0.01 and sum(rate(http_requests_total{status=~\"5..\"}[5m])) / sum(rate(http_requests_total[5m])) > 2 * sum(rate(http_requests_total{status=~\"5..\"}[60m])) / sum(rate(http_requests_total[60m]))\n    for: 5m\n    labels:\n      severity: warning\n    annotations:\n      summary: \"Tasa de errores aumentando\"\n      description: \"La tasa de errores HTTP 5xx ha superado el 1% y es el doble que la media de la última hora.\""
        }
      ],
      "relatedInstructions": ["dr006", "dr010", "mon002"]
    },
    {
      "id": "dr010",
      "title": {
        "es": "Documentar procedimientos de recuperación detallados",
        "en": "Document detailed recovery procedures"
      },
      "description": {
        "es": "Crear documentación paso a paso para cada escenario de recuperación",
        "en": "Create step-by-step documentation for each recovery scenario"
      },
      "text": {
        "es": "Documenta procedimientos detallados de recuperación para cada escenario de desastre potencial. Incluye instrucciones paso a paso con niveles adecuados de detalle que permitan a cualquier miembro del equipo con el nivel de acceso apropiado ejecutar la recuperación. Mantener esta documentación en múltiples ubicaciones accesibles incluso durante una interrupción mayor.",
        "en": "Document detailed recovery procedures for each potential disaster scenario. Include step-by-step instructions with appropriate levels of detail that allow any team member with the proper access level to execute the recovery. Maintain this documentation in multiple locations that are accessible even during a major disruption."
      },
      "importance": "high",
      "category": "disaster_recovery",
      "subcategory": "documentation",
      "tags": ["documentation", "procedures", "knowledge_management"],
      "source": {
        "agentType": "general",
        "repository": "system-prompts/devops",
        "context": "Operational Documentation"
      },
      "compatibility": {
        "frameworks": ["all"],
        "languages": ["all"],
        "environments": ["all"]
      },
      "examples": [
        {
          "context": {
            "es": "Procedimiento de recuperación de base de datos",
            "en": "Database recovery procedure"
          },
          "code": "# Procedimiento de Recuperación: Pérdida Total de Base de Datos Principal\n\n## Información General\n- **Sistema**: PostgreSQL - Base de Datos de Clientes\n- **Criticidad**: Alta\n- **RTO**: 1 hora\n- **RPO**: 15 minutos\n- **Responsable Principal**: Administrador de Base de Datos de Guardia\n\n## Precondiciones\n- Acceso a AWS Console (rol: DB-Admin)\n- Accesos VPN a entorno de Producción\n- Backups verificados en las últimas 24 horas\n\n## Detección y Validación\n1. Confirmar la caída de la base de datos principal verificando:\n   - Alertas en el sistema de monitoreo\n   - Imposibilidad de conectarse a la instancia\n   - Errores en logs de aplicación\n\n## Procedimiento de Recuperación\n\n### Paso 1: Evaluación Inicial (Tiempo estimado: 5 min)\n1. Acceder al panel de CloudWatch para revisar métricas:\n   * Navegue a https://console.aws.amazon.com/cloudwatch/\n   * Verifique alarmas activas para `prod-db-cluster`\n   * Revisar logs de errores recientes\n\n2. Determinar tipo de fallo:\n   * Si es fallo de instancia pero la réplica está activa, proceder al Paso 2\n   * Si es corrupción de datos/fallo completo, proceder al Paso 3\n\n### Paso 2: Promoción de Réplica (Tiempo estimado: 10-15 min)\n1. Acceder a la consola RDS: https://console.aws.amazon.com/rds/\n2. Seleccionar la instancia de réplica `prod-db-replica`\n3. Hacer clic en \"Actions\" > \"Promote\"\n4. Confirmar la promoción\n5. Esperar a que el estado cambie a \"Available\" (5-10 min)\n6. Actualizar la configuración de la aplicación:\n   ```bash\n   kubectl -n production apply -f database-config-standby.yaml\n   ```\n7. Verificar la conectividad desde la aplicación:\n   ```bash\n   kubectl -n production exec -it deploy/api -- curl http://localhost:8080/health\n   ```\n\n### Paso 3: Restauración desde Backup (Tiempo estimado: 30-45 min)\n1. Identificar el último backup válido:\n   ```bash\n   aws s3 ls s3://db-backups/prod/daily/ --profile prod-db-admin | sort | tail -n 5\n   ```\n\n2. Crear nueva instancia RDS:\n   * Navegue a la consola RDS > \"Create database\"\n   * Seleccione \"PostgreSQL\" y la versión actual en uso\n   * Nombre: `prod-db-restored`\n   * Clase: db.r5.2xlarge\n   * Almacenamiento: 500 GB\n   * Multi-AZ: Yes\n   * VPC, subredes y grupos de seguridad: Igual que la instancia original\n\n3. Restaurar el backup:\n   ```bash\n   aws rds restore-db-instance-from-s3 \\\n     --db-instance-identifier prod-db-restored \\\n     --s3-bucket db-backups \\\n     --s3-prefix prod/daily/prod-db-202XYYZZ.dump \\\n     --profile prod-db-admin\n   ```\n\n4. Aplicar transacciones recientes desde WAL (si disponibles)\n   [Instrucciones detalladas para recuperación Point-in-Time]\n\n5. Actualizar la configuración de la aplicación con la nueva instancia:\n   ```bash\n   kubectl -n production apply -f database-config-restored.yaml\n   ```\n\n## Verificación Post-Recuperación\n1. Ejecutar consultas de diagnóstico:\n   ```sql\n   SELECT count(*) FROM customers;\n   SELECT max(created_at) FROM orders;\n   SELECT count(*) FROM transactions WHERE date > current_date - interval '1 day';\n   ```\n   * Comparar resultados con los límites esperados documentados en KB-12345\n\n2. Verificar el funcionamiento de la aplicación:\n   * Iniciar sesión como usuario de prueba\n   * Completar 3 transacciones de prueba\n   * Verificar que los datos aparecen correctamente en informes\n\n3. Comprobar el rendimiento:\n   * Revisar tiempos de respuesta en el panel de CloudWatch\n   * Verificar que están dentro de los SLAs\n\n## Comunicación\n1. Actualizar ticket en el sistema de incidentes\n2. Notificar a gerentes de operaciones por canal de Slack #prod-incidents\n3. Si el tiempo de interrupción > 15 min, iniciar comunicación con clientes según protocolo\n\n## Tareas Post-Incidente\n1. Programar la creación de una nueva instancia de replica\n2. Actualizar documentación con cualquier hallazgo nuevo\n3. Programar reunión post-mortem para el siguiente día hábil\n4. Crear reporte de incidente"
        }
      ],
      "relatedInstructions": ["dr001", "dr008", "doc001"]
    }
  ]
}